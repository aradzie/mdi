"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var classNames = require("classnames");
var React = require("react");
exports.propTypes = {
    children: React.PropTypes.node.isRequired,
    className: React.PropTypes.any,
    viewBox: React.PropTypes.string,
    onClick: React.PropTypes.func,
    onMouseDown: React.PropTypes.func,
    onMouseEnter: React.PropTypes.func,
    onMouseLeave: React.PropTypes.func,
    onMouseUp: React.PropTypes.func,
};
exports.defaultProps = {
    className: null,
    viewBox: "0 0 24 24",
    onClick: function () { },
    onMouseDown: function () { },
    onMouseEnter: function () { },
    onMouseLeave: function () { },
    onMouseUp: function () { },
};
var SvgIcon = (function (_super) {
    tslib_1.__extends(SvgIcon, _super);
    function SvgIcon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SvgIcon.prototype.render = function () {
        var self = this;
        var _a = self.props, children = _a.children, className = _a.className, viewBox = _a.viewBox, onClick = _a.onClick, onMouseDown = _a.onMouseDown, onMouseEnter = _a.onMouseEnter, onMouseLeave = _a.onMouseLeave, onMouseUp = _a.onMouseUp;
        var cn = classNames("Icon", className);
        return (React.createElement("svg", { className: cn, viewBox: viewBox, onClick: onClick, onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave, onMouseUp: onMouseUp }, children));
    };
    SvgIcon.propTypes = exports.propTypes;
    SvgIcon.defaultProps = exports.defaultProps;
    return SvgIcon;
}(React.PureComponent));
exports.SvgIcon = SvgIcon;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ZnLWljb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvc3ZnLWljb24udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHVDQUF5QztBQUN6Qyw2QkFBK0I7QUFZbEIsUUFBQSxTQUFTLEdBQUc7SUFDckIsUUFBUSxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFVBQVU7SUFDekMsU0FBUyxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRztJQUM5QixPQUFPLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNO0lBQy9CLE9BQU8sRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUk7SUFDN0IsV0FBVyxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSTtJQUNqQyxZQUFZLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJO0lBQ2xDLFlBQVksRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUk7SUFDbEMsU0FBUyxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSTtDQUNsQyxDQUFDO0FBRVcsUUFBQSxZQUFZLEdBQUc7SUFDeEIsU0FBUyxFQUFFLElBQUk7SUFDZixPQUFPLEVBQUUsV0FBVztJQUNwQixPQUFPLEVBQUUsY0FBTyxDQUFDO0lBQ2pCLFdBQVcsRUFBRSxjQUFPLENBQUM7SUFDckIsWUFBWSxFQUFFLGNBQU8sQ0FBQztJQUN0QixZQUFZLEVBQUUsY0FBTyxDQUFDO0lBQ3RCLFNBQVMsRUFBRSxjQUFPLENBQUM7Q0FDdEIsQ0FBQztBQUVGO0lBQTZCLG1DQUFxQztJQUFsRTs7SUFnQ0EsQ0FBQztJQTVCRyx3QkFBTSxHQUFOO1FBQ0ksSUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBRWQsSUFBQSxlQVNDLEVBUkcsc0JBQVEsRUFDUix3QkFBUyxFQUNULG9CQUFPLEVBQ1Asb0JBQU8sRUFDUCw0QkFBVyxFQUNYLDhCQUFZLEVBQ1osOEJBQVksRUFDWix3QkFBUyxDQUVSO1FBQ1QsSUFBTSxFQUFFLEdBQUcsVUFBVSxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQztRQUN6QyxNQUFNLENBQUMsQ0FDSCw2QkFBSyxTQUFTLEVBQUUsRUFBRSxFQUNkLE9BQU8sRUFBRSxPQUFPLEVBQ2hCLE9BQU8sRUFBRSxPQUFPLEVBQ2hCLFdBQVcsRUFBRSxXQUFXLEVBQ3hCLFlBQVksRUFBRSxZQUFZLEVBQzFCLFlBQVksRUFBRSxZQUFZLEVBQzFCLFNBQVMsRUFBRSxTQUFTLElBRW5CLFFBQVEsQ0FDUCxDQUNULENBQUM7SUFDTixDQUFDO0lBOUJNLGlCQUFTLEdBQUcsaUJBQVMsQ0FBQztJQUN0QixvQkFBWSxHQUFHLG9CQUFZLENBQUM7SUE4QnZDLGNBQUM7Q0FBQSxBQWhDRCxDQUE2QixLQUFLLENBQUMsYUFBYSxHQWdDL0M7QUFoQ1ksMEJBQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjbGFzc05hbWVzIGZyb20gXCJjbGFzc25hbWVzXCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTdmdJY29uUHJvcHMge1xuICAgIGNsYXNzTmFtZT86IGFueTtcbiAgICB2aWV3Qm94Pzogc3RyaW5nO1xuICAgIG9uQ2xpY2s/OiBSZWFjdC5Nb3VzZUV2ZW50SGFuZGxlcjx7fT47XG4gICAgb25Nb3VzZURvd24/OiBSZWFjdC5Nb3VzZUV2ZW50SGFuZGxlcjx7fT47XG4gICAgb25Nb3VzZUVudGVyPzogUmVhY3QuTW91c2VFdmVudEhhbmRsZXI8e30+O1xuICAgIG9uTW91c2VMZWF2ZT86IFJlYWN0Lk1vdXNlRXZlbnRIYW5kbGVyPHt9PjtcbiAgICBvbk1vdXNlVXA/OiBSZWFjdC5Nb3VzZUV2ZW50SGFuZGxlcjx7fT47XG59XG5cbmV4cG9ydCBjb25zdCBwcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFJlYWN0LlByb3BUeXBlcy5ub2RlLmlzUmVxdWlyZWQsXG4gICAgY2xhc3NOYW1lOiBSZWFjdC5Qcm9wVHlwZXMuYW55LFxuICAgIHZpZXdCb3g6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgb25DbGljazogUmVhY3QuUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25Nb3VzZURvd246IFJlYWN0LlByb3BUeXBlcy5mdW5jLFxuICAgIG9uTW91c2VFbnRlcjogUmVhY3QuUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25Nb3VzZUxlYXZlOiBSZWFjdC5Qcm9wVHlwZXMuZnVuYyxcbiAgICBvbk1vdXNlVXA6IFJlYWN0LlByb3BUeXBlcy5mdW5jLFxufTtcblxuZXhwb3J0IGNvbnN0IGRlZmF1bHRQcm9wcyA9IHtcbiAgICBjbGFzc05hbWU6IG51bGwsXG4gICAgdmlld0JveDogXCIwIDAgMjQgMjRcIixcbiAgICBvbkNsaWNrOiAoKSA9PiB7fSxcbiAgICBvbk1vdXNlRG93bjogKCkgPT4ge30sXG4gICAgb25Nb3VzZUVudGVyOiAoKSA9PiB7fSxcbiAgICBvbk1vdXNlTGVhdmU6ICgpID0+IHt9LFxuICAgIG9uTW91c2VVcDogKCkgPT4ge30sXG59O1xuXG5leHBvcnQgY2xhc3MgU3ZnSWNvbiBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQ8U3ZnSWNvblByb3BzLCB7fT4ge1xuICAgIHN0YXRpYyBwcm9wVHlwZXMgPSBwcm9wVHlwZXM7XG4gICAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgICAgICAgY2hpbGRyZW4sXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICAgICAgICAgIHZpZXdCb3gsXG4gICAgICAgICAgICAgICAgb25DbGljayxcbiAgICAgICAgICAgICAgICBvbk1vdXNlRG93bixcbiAgICAgICAgICAgICAgICBvbk1vdXNlRW50ZXIsXG4gICAgICAgICAgICAgICAgb25Nb3VzZUxlYXZlLFxuICAgICAgICAgICAgICAgIG9uTW91c2VVcCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0gPSBzZWxmO1xuICAgICAgICBjb25zdCBjbiA9IGNsYXNzTmFtZXMoXCJJY29uXCIsIGNsYXNzTmFtZSk7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8c3ZnIGNsYXNzTmFtZT17Y259XG4gICAgICAgICAgICAgICAgdmlld0JveD17dmlld0JveH1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICAgICAgICAgIG9uTW91c2VEb3duPXtvbk1vdXNlRG93bn1cbiAgICAgICAgICAgICAgICBvbk1vdXNlRW50ZXI9e29uTW91c2VFbnRlcn1cbiAgICAgICAgICAgICAgICBvbk1vdXNlTGVhdmU9e29uTW91c2VMZWF2ZX1cbiAgICAgICAgICAgICAgICBvbk1vdXNlVXA9e29uTW91c2VVcH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgKTtcbiAgICB9XG59XG4iXX0=